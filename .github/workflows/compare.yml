name: datafusion sql fuzzing

on: [push, pull_request]

jobs:
  test:
    name: compare with postgres
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db_test
          POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          repository: apache/arrow-datafusion
          path: ./arrow-datafusion
          submodules: recursive

      - name: Show Working directory
        run: ls  

      - name: Pwd directory
        run: pwd  

      - name: Install Build Dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Setup Rust toolchain
        shell: bash
        run: |
          echo "Installing stable"
          rustup toolchain install stable
          rustup default stable
          # rustup component add rustfmt  
      - name: Build datafusion-cli
        run: (cd arrow-datafusion/datafusion-cli && cargo build)    

      - name: Show build result
        run: cd arrow-datafusion/datafusion-cli/target/debug && ./datafusion-cli

      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.10"
      # - name: Install Python dependencies
      #   run: |
      #     python -m pip install --upgrade pip setuptools wheel
      #     python -m pip install -r integration-tests/requirements.txt

      - name: Show env of pg-server
        run: echo "$POSTGRES_HOST:$POSTGRES_PORT:$POSTGRES_DB:$POSTGRES_USER:$POSTGRES_PASSWORD"   
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: db_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      # - name: Install latest nightly
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: nightly
      #     override: true
      #     components: rustfmt, clippy

      # - name: Run cargo fmt
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      #     args: -- --check

      # - name: Run cargo clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: -- -D warnings
